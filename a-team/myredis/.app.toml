
# Name of the application
name = "myredis"

[Build]

  # Command to build the application
  command = "docker build --iidfile .container.id ."

  # Specification of build inputs like source files, Makefiles, etc
  [Build.Input]

    # Inputs specified by path, matching only Git tracked files
    [Build.Input.GitFiles]

      # Relative paths to source files.
      # Only files tracked by Git that are not in the .gitignore file are matched.
      # The same patterns that git ls-files supports can be used.
      # Valid variables: $ROOT
      paths = ["Dockerfile"]

  # Specification of build outputs produced by the [Build.command]
  [Build.Output]

    [[Build.Output.DockerImage]]

      # Path to a file that is created by [Build.Command] and contains the image ID of the produced image (docker build --iidfile), valid variables: $APPNAME
      idfile = ".container.id"

      # Registry repository the image is uploaded to
      [Build.Output.DockerImage.RegistryUpload]

        # Registry address in the format <HOST>:[<PORT>], if empty the default from the docker agent is used
        registry = "localhost:5000"

        # Repository path, format: [<server[:port]>/]<owner>/<repository>:<tag>, valid variables: $APPNAME
        repository = "baur-example/$APPNAME"

        # Tag that is applied to the image, valid variables: $APPNAME, $UUID, $GITCOMMIT
        tag = "$GITCOMMIT"
